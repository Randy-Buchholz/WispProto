//::Part:PersonContact
//::Uses:PersonName, StreetAddress, MuniUsa

//:[Settings
self.PersonContactSettings = class {
   static RowGap = 6;
   static Width = 600;
};
//:]Settings

//:[Source
class PersonContact extends HTMLElement {
   static cfg = GetSettings(this.name, PersonContactSettings);

   static typeStyle = [
      stylex.spaces.FlexSpace,
      `flex-direction:column;gap:${PersonContact.cfg.RowGap}px;`,
      `width:${PersonContact.cfg.Width}px;`
   ];

   static { regElm(this); };

   static {
      class ContactControlRow extends FormLine {
         static { regElm(this); };
         #buttons = [];
         constructor(buttons) {
            super();
            this.#buttons = buttons;
            addManyTo(this, this.#buttons);
         };
      };
   };

   #name;
   #street;
   #muni;
   #controls;

   // Elements
   get Name() { return this.#name; }
   get Street() { return this.#street; }
   get Muni() { return this.#muni; }

   // Models
   get Shape() { return this.#model1(); }
   get Facets() { return this.#model2(); }
   constructor({
      Name: {
         First: arg0, first = Required(arg0),
         Middle: arg1, middle = Default(arg1, ""),
         Last: arg2, last = Required(arg2)
      },
      Street: {
         Building: arg3, building = Required(arg3),
         Road: arg4, road = Required(arg4),
         Unit: arg5, unit = Default(arg5, "")
      },

      Muni: {
         City: arg6, city = Required(arg6),
         County: arg7, county = Required(arg7),
         State: arg8, state = Required(arg8)
      } }) {
      super();

      this.#name = new elm.PersonName({ first, middle, last });
      this.#street = new elm.StreetAddress({ building, road, unit });
      this.#muni = new elm.MuniUsa({ city, county, state });
      this.#controls = new elm.ContactControlRow([
         new elm.ButtonUp("FirstLast View", () => this.#view1()),
         new elm.ButtonUp("LastFirst View", () => this.#view2()),
         new elm.ButtonUp("Shape Model", () => Logger.Log(this.Shape)),
         new elm.ButtonUp("Facet Model", () => Logger.Log(this.Facets))
      ]);
      this.#view1();
   }

   // MVC-Type Stuff

   // Views
   #view1() {
      addxManyTo(this, [this.#name, this.#street, this.#muni, this.#controls]);
      this.#name.FirstLast();
   }

   #view2() {
      addxManyTo(this, [this.#name, this.#street, this.#muni, this.#controls]);
      this.#name.LastFirst();
   }

   // Models
   #model1() {
      const shape = `\
      <PersonContact>
         <Name>
            <First>${this.Name.First}</First>
            <Middle>${this.Name.Middle}</Middle>
            <Last>${this.Name.Last}</Last>
         </Name>
         <Address>
            <Building>${this.Street.Building}</building>
            <Road>${this.Street.Road}</Road>
            <Unit>${this.Street.Unit}</Unit>
         </Address>
         <Municipality>
            <City>${this.Muni.City}</City>
            <County>${this.Muni.County}</County>
            <State>${this.Muni.State}</State>
         </Municipality>
      </PersonContact>
     `;
      return shape;
   }

   #model2() {
      const facets = `\
      <PersonContact>
         <Name last="${this.Name.Last}" first="${this.Name.First}" middleInitial="${this.Name.Middle.charAt(0)}" />
         <Street number="${this.Street.Building}" road="${this.Street.Road}" unit="${this.Street.Unit}" />
         <Town city="${this.Muni.City}" state="${this.Muni.State}" />
      </PersonContact>
      `;
      return facets;
   };
}
//:]Source

//:[Test
self.PersonContactTest = class {
   static Run() {
      this.Deploy();
   }
   static Deploy() {
      self.PersonContact = new elm.PersonContact({
         Name: { First: "Molly", Middle: "May", Last: "Malone" },
         Street: { Building: "4423", Road: "Maple" },
         Muni: { City: "Dublin", County: "Travis", State: "TX" }
      });
      addToBody(self.PersonContact);
   }
};
//:]Test

