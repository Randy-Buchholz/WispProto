//::Part:PersonContact
//::Uses:PersonName, StreetAddress, MuniUsa

//:[Settings
self.PersonContactSettings = class {
   static RowGap = 6;
   static Width = 600;
};
//:]Settings

//:[Source
class PersonContact extends HTMLElement {
   static cfg = GetSettings(this.name, PersonContactSettings);

   static typeStyle = [
      stylex.spaces.FlexSpace,
      `flex-direction:column;gap:${PersonContact.cfg.RowGap}px;`,
      `width:${PersonContact.cfg.Width}px;`
   ];

   static { regElm(this); };

   static {
      class ContactControlRow extends FormLine {
         static { regElm(this); };
         #buttons = [];
         constructor() {
            super();
            this.#buttons.push(new elm.ButtonUp("View 1", () => { }));
            this.#buttons.push(new elm.ButtonUp("View 2", () => { }));
            addManyTo(this, this.#buttons);
         };
      };
   };

   #name;
   #street;
   #muni;
   #controls;

   get Name() { return this.#name; }
   get Street() { return this.#street; }
   get Muni() { return this.#muni; }

   constructor({
      Name: {
         First: arg0, first = Required(arg0),
         Middle: arg1, middle = Default(arg1, ""),
         Last: arg2, last = Required(arg2)
      },
      Street: {
         Building: arg3, building = Required(arg3),
         Road: arg4, road = Required(arg4),
         Unit: arg5, unit = Default(arg5, "")
      },

      Muni: {
         City: arg6, city = Required(arg6),
         County: arg7, county = Required(arg7),
         State: arg8, state = Required(arg8)
      } }) {
      super();

      this.#name = new elm.PersonName({ first, middle, last });
      this.#street = new elm.StreetAddress({ building, road, unit });
      this.#muni = new elm.MuniUsa({ city, county, state });
      this.#controls = new elm.ContactControlRow();
      this.#view1();
   }

   // MVC-Type Stuff
   #view1(){ addManyTo(this, [this.#name, this.#street, this.#muni, this.#controls]); }
   #view2(){ addManyTo(this, [this.#name, this.#street, this.#muni, this.#controls]); }
   
}
//:]Source

//:[Test
self.PersonContactTest = class {
   static Run() {
      this.Deploy();
   }
   static Deploy() {
      self.PersonContact = new elm.PersonContact({
         Name: { First: "Randy", Middle: "D", Last: "Buchholz" },
         Street: { Building: "4423", Road: "Maple" },
         Muni: { City: "Austin", County: "Travis", State: "TX" }
      });
      addToBody(self.PersonContact);
   }
};
//:]Test

